"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const chalk_1 = __importDefault(require("chalk"));
const shelljs_1 = __importDefault(require("shelljs"));
const util = {
    execAsync: (command) => {
        return new Promise(resolve => {
            {
                shelljs_1.default.exec(command, { silent: true }, (code, stdout, stderr) => {
                    const execResult = { stdout, stderr, error: false };
                    if (code !== 0)
                        execResult.error = true;
                    return resolve(execResult);
                });
            }
        });
    },
    log: (msg) => {
        /* tslint:disable */
        if (typeof msg === 'object') {
            console.log(JSON.stringify(msg, null, 4));
        }
        else {
            console.log(msg);
        }
        /* tslint:enable */
    },
    printConfig: () => {
        util.log(`RootDir: ${chalk_1.default.cyan(global.config.rootDir)}`);
        util.log(`Git:`);
        if (global.config.git.username) {
            util.log(`     username : ${chalk_1.default.cyan(global.config.git.username)}`);
        }
        util.log(`     team     : ${chalk_1.default.cyan(global.config.git.team)}`);
        util.log(`     host     : ${chalk_1.default.cyan(global.config.git.host)}`);
        util.log(`     prefix   : ${chalk_1.default.cyan(global.config.git.projectPrefix)}`);
        util.log('');
        util.log(`Project List:`);
        util.log(`[ ${chalk_1.default.cyan(global.config.projects.join(chalk_1.default.white(' | ')))} ]`);
        util.log('');
        if (global.config.pullRequestSkip && global.config.pullRequestSkip.length > 0) {
            util.log(`PullRequest skip:`);
            util.log(`[ ${chalk_1.default.cyan(global.config.pullRequestSkip.join(chalk_1.default.white(' | ')))} ]`);
            util.log('');
        }
        if (global.config.pullRequestSkip && global.config.dockerBaseImages.length > 0) {
            util.log(`Docker base images:`);
            util.log(`[ ${chalk_1.default.cyan(global.config.dockerBaseImages.join(chalk_1.default.white(' | ')))} ]`);
            util.log('');
        }
    },
};
exports.util = util;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXRpbC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLGtEQUF5QjtBQUN6QixzREFBMkI7QUFFM0IsTUFBTSxJQUFJLEdBQUc7SUFDWCxTQUFTLEVBQUUsQ0FBQyxPQUFlLEVBQStELEVBQUU7UUFDMUYsT0FBTyxJQUFJLE9BQU8sQ0FBcUQsT0FBTyxDQUFDLEVBQUU7WUFDL0U7Z0JBQ0UsaUJBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxNQUFNLEVBQUUsRUFBRTtvQkFDN0QsTUFBTSxVQUFVLEdBQUcsRUFBRSxNQUFNLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQTtvQkFDbkQsSUFBSSxJQUFJLEtBQUssQ0FBQzt3QkFBRSxVQUFVLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQTtvQkFDdkMsT0FBTyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUE7Z0JBQzVCLENBQUMsQ0FBQyxDQUFBO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FBQTtJQUNKLENBQUM7SUFFRCxHQUFHLEVBQUUsQ0FBQyxHQUFvQixFQUFRLEVBQUU7UUFDbEMsb0JBQW9CO1FBQ3BCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUE7U0FDMUM7YUFBTTtZQUNMLE9BQU8sQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7U0FDakI7UUFDRCxtQkFBbUI7SUFDckIsQ0FBQztJQUNELFdBQVcsRUFBRSxHQUFTLEVBQUU7UUFDdEIsSUFBSSxDQUFDLEdBQUcsQ0FBQyxZQUFZLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFDLENBQUE7UUFDekQsSUFBSSxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQTtRQUNoQixJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRTtZQUM5QixJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixlQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQTtTQUN0RTtRQUNELElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ2pFLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQ2pFLElBQUksQ0FBQyxHQUFHLENBQUMsbUJBQW1CLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDLEVBQUUsQ0FBQyxDQUFBO1FBQzFFLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUE7UUFFWixJQUFJLENBQUMsR0FBRyxDQUFDLGVBQWUsQ0FBQyxDQUFBO1FBQ3pCLElBQUksQ0FBQyxHQUFHLENBQUMsS0FBSyxlQUFLLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxlQUFLLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUE7UUFDOUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQTtRQUVaLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxlQUFlLElBQUksTUFBTSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM3RSxJQUFJLENBQUMsR0FBRyxDQUFDLG1CQUFtQixDQUFDLENBQUE7WUFDN0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLGVBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUNyRixJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFBO1NBQ2I7UUFFRCxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsZUFBZSxJQUFJLE1BQU0sQ0FBQyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUM5RSxJQUFJLENBQUMsR0FBRyxDQUFDLHFCQUFxQixDQUFDLENBQUE7WUFDL0IsSUFBSSxDQUFDLEdBQUcsQ0FBQyxLQUFLLGVBQUssQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsZUFBSyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFBO1lBQ3RGLElBQUksQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUE7U0FDYjtJQUNILENBQUM7Q0FDRixDQUFBO0FBQ1Esb0JBQUkiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2hhbGsgZnJvbSAnY2hhbGsnXG5pbXBvcnQgc2hlbGwgZnJvbSAnc2hlbGxqcydcblxuY29uc3QgdXRpbCA9IHtcbiAgZXhlY0FzeW5jOiAoY29tbWFuZDogc3RyaW5nKTogUHJvbWlzZTx7IHN0ZG91dDogc3RyaW5nOyBzdGRlcnI6IHN0cmluZzsgZXJyb3I6IGJvb2xlYW4gfT4gPT4ge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZTx7IHN0ZG91dDogc3RyaW5nOyBzdGRlcnI6IHN0cmluZzsgZXJyb3I6IGJvb2xlYW4gfT4ocmVzb2x2ZSA9PiB7XG4gICAgICB7XG4gICAgICAgIHNoZWxsLmV4ZWMoY29tbWFuZCwgeyBzaWxlbnQ6IHRydWUgfSwgKGNvZGUsIHN0ZG91dCwgc3RkZXJyKSA9PiB7XG4gICAgICAgICAgY29uc3QgZXhlY1Jlc3VsdCA9IHsgc3Rkb3V0LCBzdGRlcnIsIGVycm9yOiBmYWxzZSB9XG4gICAgICAgICAgaWYgKGNvZGUgIT09IDApIGV4ZWNSZXN1bHQuZXJyb3IgPSB0cnVlXG4gICAgICAgICAgcmV0dXJuIHJlc29sdmUoZXhlY1Jlc3VsdClcbiAgICAgICAgfSlcbiAgICAgIH1cbiAgICB9KVxuICB9LFxuXG4gIGxvZzogKG1zZzogc3RyaW5nIHwgb2JqZWN0KTogdm9pZCA9PiB7XG4gICAgLyogdHNsaW50OmRpc2FibGUgKi9cbiAgICBpZiAodHlwZW9mIG1zZyA9PT0gJ29iamVjdCcpIHtcbiAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KG1zZywgbnVsbCwgNCkpXG4gICAgfSBlbHNlIHtcbiAgICAgIGNvbnNvbGUubG9nKG1zZylcbiAgICB9XG4gICAgLyogdHNsaW50OmVuYWJsZSAqL1xuICB9LFxuICBwcmludENvbmZpZzogKCk6IHZvaWQgPT4ge1xuICAgIHV0aWwubG9nKGBSb290RGlyOiAke2NoYWxrLmN5YW4oZ2xvYmFsLmNvbmZpZy5yb290RGlyKX1gKVxuICAgIHV0aWwubG9nKGBHaXQ6YClcbiAgICBpZiAoZ2xvYmFsLmNvbmZpZy5naXQudXNlcm5hbWUpIHtcbiAgICAgIHV0aWwubG9nKGAgICAgIHVzZXJuYW1lIDogJHtjaGFsay5jeWFuKGdsb2JhbC5jb25maWcuZ2l0LnVzZXJuYW1lKX1gKVxuICAgIH1cbiAgICB1dGlsLmxvZyhgICAgICB0ZWFtICAgICA6ICR7Y2hhbGsuY3lhbihnbG9iYWwuY29uZmlnLmdpdC50ZWFtKX1gKVxuICAgIHV0aWwubG9nKGAgICAgIGhvc3QgICAgIDogJHtjaGFsay5jeWFuKGdsb2JhbC5jb25maWcuZ2l0Lmhvc3QpfWApXG4gICAgdXRpbC5sb2coYCAgICAgcHJlZml4ICAgOiAke2NoYWxrLmN5YW4oZ2xvYmFsLmNvbmZpZy5naXQucHJvamVjdFByZWZpeCl9YClcbiAgICB1dGlsLmxvZygnJylcblxuICAgIHV0aWwubG9nKGBQcm9qZWN0IExpc3Q6YClcbiAgICB1dGlsLmxvZyhgWyAke2NoYWxrLmN5YW4oZ2xvYmFsLmNvbmZpZy5wcm9qZWN0cy5qb2luKGNoYWxrLndoaXRlKCcgfCAnKSkpfSBdYClcbiAgICB1dGlsLmxvZygnJylcblxuICAgIGlmIChnbG9iYWwuY29uZmlnLnB1bGxSZXF1ZXN0U2tpcCAmJiBnbG9iYWwuY29uZmlnLnB1bGxSZXF1ZXN0U2tpcC5sZW5ndGggPiAwKSB7XG4gICAgICB1dGlsLmxvZyhgUHVsbFJlcXVlc3Qgc2tpcDpgKVxuICAgICAgdXRpbC5sb2coYFsgJHtjaGFsay5jeWFuKGdsb2JhbC5jb25maWcucHVsbFJlcXVlc3RTa2lwLmpvaW4oY2hhbGsud2hpdGUoJyB8ICcpKSl9IF1gKVxuICAgICAgdXRpbC5sb2coJycpXG4gICAgfVxuXG4gICAgaWYgKGdsb2JhbC5jb25maWcucHVsbFJlcXVlc3RTa2lwICYmIGdsb2JhbC5jb25maWcuZG9ja2VyQmFzZUltYWdlcy5sZW5ndGggPiAwKSB7XG4gICAgICB1dGlsLmxvZyhgRG9ja2VyIGJhc2UgaW1hZ2VzOmApXG4gICAgICB1dGlsLmxvZyhgWyAke2NoYWxrLmN5YW4oZ2xvYmFsLmNvbmZpZy5kb2NrZXJCYXNlSW1hZ2VzLmpvaW4oY2hhbGsud2hpdGUoJyB8ICcpKSl9IF1gKVxuICAgICAgdXRpbC5sb2coJycpXG4gICAgfVxuICB9LFxufVxuZXhwb3J0IHsgdXRpbCB9XG4iXX0=